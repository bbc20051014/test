package com.pingan.bloan.report.controller;

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.pingan.bloan.report.comm.FileTools;
import com.pingan.bloan.report.domain.GoldWithdrawal;
import com.pingan.bloan.report.service.XJRegressionRateService;
import com.pingan.bloan.report.tasks.XJCustomerUMReport;
import com.pingan.bloan.report.tasks.XJOrgnameReport;
import com.pingan.bloan.report.tasks.XJPostReviewReport;
import com.pingan.bloan.report.tasks.XJSaleTeamReport;

@RestController
@RequestMapping("/xj")
public class XJRegressionRateController {
	private static Logger logger = LogManager.getLogger(XJRegressionRateController.class);
	@Autowired
	private XJRegressionRateService xjService;
	
	@Autowired
	private XJSaleTeamReport XJSaleTeam;
	
	@Autowired
	private XJCustomerUMReport XJCustomer;

	@Autowired
	private XJPostReviewReport XJPreApprover;
	
	@Autowired
	private XJOrgnameReport XJOrgname;
	
	@SuppressWarnings("static-access")
	@RequestMapping(value = "/orgnamexls", method = RequestMethod.GET)
	public HttpEntity<byte[]> getorgname(@RequestParam String bisType) {
		String filename = FileTools.generateFileName("消金分行退否率报表", bisType);
		String downLoadFilename =  filename.copyValueOf(filename.toCharArray());

		if (!new File(filename).exists()) {
			XJOrgname.start();
		}
		return xjService.xjReport(downLoadFilename);
	}
	
	
	@RequestMapping(value = "/insert", method = RequestMethod.GET)
	public void inert() {
		
		XJOrgname.insertOrUpdate();
	}
	
	@SuppressWarnings("static-access")
	@RequestMapping(value = "/saleteamxls", method = RequestMethod.GET)
	public HttpEntity<byte[]> getsaleTeam(@RequestParam String bisType) {
		String filename = FileTools.generateFileName("营销单位排名报表", bisType);
		String downLoadFilename =  filename.copyValueOf(filename.toCharArray());

		if (!new File(filename).exists()) {
			XJSaleTeam.start();
		}
		return xjService.xjReport(downLoadFilename);
	}
	
	@SuppressWarnings("static-access")
	@RequestMapping(value = "/customerxls", method = RequestMethod.GET)
	public HttpEntity<byte[]> getcustomer(@RequestParam String bisType) {
		String filename = FileTools.generateFileName("客户经理排名表", bisType);
		String downLoadFilename = filename.copyValueOf(filename.toCharArray());
		
		if (!new File(filename).exists()) {
			XJCustomer.start();
		}
		return xjService.xjReport(downLoadFilename);
	}

	@SuppressWarnings("static-access")
	@RequestMapping(value = "/preapproverxls", method = RequestMethod.GET)
	public HttpEntity<byte[]> getpreApproverName(@RequestParam String bisType) {
		String filename = FileTools.generateFileName("核审岗排名表", bisType);
		String downLoadFilename = filename.copyValueOf(filename.toCharArray());
		
		if (!new File(filename).exists()) {
			XJPreApprover.start();
		}
		return xjService.xjReport(downLoadFilename);
	}

	@SuppressWarnings("static-access")
	@RequestMapping(value = "/goldWithdrawalxls", method = RequestMethod.GET)
	public HttpEntity<byte[]> getgoldWithdrawal(@RequestParam String bisType) {
		String filename = FileTools.generateFileName("金服退否率", bisType);
		String downLoadFilename = filename.copyValueOf(filename.toCharArray());

		if (!new File(filename).exists()) {
			List<GoldWithdrawal> resultList = new ArrayList<GoldWithdrawal>();
			GoldWithdrawal g1 = new GoldWithdrawal();
			g1.setPredios(10);
			g1.setTimeno("3.27-4.01");
			g1.setInput(3537);
			g1.setWithdrawal(542);
			g1.setWithdrawalRate(0.1532);
			g1.setDiff(0.00);
			resultList.add(g1);
			GoldWithdrawal g4 = new GoldWithdrawal();
			g4.setPredios(11);
			g4.setTimeno("4.05-4.08");
			g4.setInput(1798);
			g4.setWithdrawal(253);
			g4.setWithdrawalRate(0.1407);
			g4.setDiff(-0.0125);
			resultList.add(g4);
			GoldWithdrawal g2 = new GoldWithdrawal();
			g2.setPredios(12);
			g2.setTimeno("4.01-4.16");
			g2.setInput(3300);
			g2.setWithdrawal(515);
			g2.setWithdrawalRate(0.1561);
			g2.setDiff(0.0153);
			resultList.add(g2);
			GoldWithdrawal g3 = new GoldWithdrawal();
			g3.setPredios(13);
			g3.setTimeno("4.17-4.22");
			g3.setInput(3347);
			g3.setWithdrawal(456);
			g3.setWithdrawalRate(0.1362);
			g3.setDiff(-0.0198);
			resultList.add(g3);
			xjService.generatexjGoldXLS(filename, resultList);
//			XJPreApprover.start();
		}
		return xjService.xjReport(downLoadFilename);
	}
}
